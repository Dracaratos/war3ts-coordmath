import * as ts from "typescript";
import { CompilerOptions } from "../CompilerOptions";
export interface ParsedCommandLine extends ts.ParsedCommandLine {
    options: CompilerOptions;
}
interface CommandLineOptionBase {
    name: string;
    aliases?: string[];
    description: string;
}
interface CommandLineOptionOfEnum extends CommandLineOptionBase {
    type: "enum";
    choices: string[];
}
interface CommandLineOptionOfBoolean extends CommandLineOptionBase {
    type: "boolean";
}
interface CommandLineOptionOfString extends CommandLineOptionBase {
    type: "string";
}
declare type CommandLineOption = CommandLineOptionOfEnum | CommandLineOptionOfBoolean | CommandLineOptionOfString;
export declare const optionDeclarations: CommandLineOption[];
export declare function updateParsedConfigFile(parsedConfigFile: ts.ParsedCommandLine): ParsedCommandLine;
export declare function parseCommandLine(args: string[]): ParsedCommandLine;
export {};
