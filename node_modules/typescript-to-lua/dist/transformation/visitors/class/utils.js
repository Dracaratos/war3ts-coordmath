"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ts = require("typescript");
const annotations_1 = require("../../utils/annotations");
function isStaticNode(node) {
    var _a;
    return (_a = node.modifiers, (_a !== null && _a !== void 0 ? _a : [])).some(m => m.kind === ts.SyntaxKind.StaticKeyword);
}
exports.isStaticNode = isStaticNode;
function getExtendedTypeNode(context, node) {
    if (node && node.heritageClauses) {
        for (const clause of node.heritageClauses) {
            if (clause.token === ts.SyntaxKind.ExtendsKeyword) {
                const superType = context.checker.getTypeAtLocation(clause.types[0]);
                const annotations = annotations_1.getTypeAnnotations(superType);
                if (!annotations.has(annotations_1.AnnotationKind.PureAbstract)) {
                    return clause.types[0];
                }
            }
        }
    }
}
exports.getExtendedTypeNode = getExtendedTypeNode;
function getExtendedType(context, node) {
    const extendedTypeNode = getExtendedTypeNode(context, node);
    return extendedTypeNode && context.checker.getTypeAtLocation(extendedTypeNode);
}
exports.getExtendedType = getExtendedType;
//# sourceMappingURL=utils.js.map