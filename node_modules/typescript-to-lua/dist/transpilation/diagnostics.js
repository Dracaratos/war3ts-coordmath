"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ts = require("typescript");
exports.toLoadTransformerItShouldBeTranspiled = (transform) => ({
    file: undefined,
    start: undefined,
    length: undefined,
    category: ts.DiagnosticCategory.Error,
    code: 0,
    source: "typescript-to-lua",
    messageText: `To load "${transform}" transformer it should be transpiled or "ts-node" should be installed`,
});
exports.couldNotResolveTransformerFrom = (transform, base) => ({
    file: undefined,
    start: undefined,
    length: undefined,
    category: ts.DiagnosticCategory.Error,
    code: 0,
    source: "typescript-to-lua",
    messageText: `Could not resolve "${transform}" transformer from "${base}".`,
});
exports.transformerShouldHaveAExport = (transform, importName) => ({
    file: undefined,
    start: undefined,
    length: undefined,
    category: ts.DiagnosticCategory.Error,
    code: 0,
    source: "typescript-to-lua",
    messageText: `"${transform}" transformer should have a "${importName}" export`,
});
exports.transformerShouldBeATsTransformerFactory = (transform) => ({
    file: undefined,
    start: undefined,
    length: undefined,
    category: ts.DiagnosticCategory.Error,
    code: 0,
    source: "typescript-to-lua",
    messageText: `"${transform}" transformer should be a ts.TransformerFactory or an object with ts.TransformerFactory values`,
});
exports.couldNotFindBundleEntryPoint = (entryPoint) => ({
    file: undefined,
    start: undefined,
    length: undefined,
    category: ts.DiagnosticCategory.Error,
    code: 0,
    source: "typescript-to-lua",
    messageText: `Could not find bundle entry point '${entryPoint}'. It should be a file in the project.`,
});
//# sourceMappingURL=diagnostics.js.map